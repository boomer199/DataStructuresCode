Note: All files can be run seperately as they all have their own main method, even though they are in the same project file. 
      Just run each one seperately as you wont see them all if you run it just once.

ANSWERS TO THEORY QUESTIONS

1. x, y, x

2. z, y, x

3. myQueue.enqueue("Jane"); --> Adds "Jane" to front of queue
3. myQueue.enqueue("Jess"); --> Adds "Jess" to queue
3. myQueue.enqueue("Jill"); --> Adds "Jill" to queue
3. myQueue.enqueue(myQueue.dequeue()); --> Takes "Jane" from front of queue and adds it to the back
3. myQueue.enqueue(myQueue.getFront()); --> Adds "Jess" to queue
3. myQueue.enqueue("Jim"); --> Adds "Jim" to queue
3. String name = myQueue.dequeue(); --> Makes a variable called name with the value "Jess" and removes "Jess" from queue
3. myQueue.enqueue(myQueue.getFront()); --> Adds "Jill" to back of queue

4. myDeque.addToFront("Jim"); --> "Jim"
4. myDeque.addToFront("Jess"); --> "Jim" "Jess"
4. myDeque.addToBack("Jill"); --> "Jim" "Jess" "Jill"
4. myDeque.addToBack("Jane"); --> "Jim" "Jess" "Jill" "Jane"
4. String name = myDeque.removeFront(); --> "Jess" "Jill" "Jane" 
4. myDeque.addToBack(name); -->  "Jess" "Jill" "Jane" "Jim"
4. myDeque.addToBack(myDeque.getFront()); -->  "Jess" "Jill" "Jane" "Jim" "Jess"
4. myDeque.addToFront(myDeque.removeBack()); --> "Jess" "Jess" "Jill" "Jane" "Jim"
4. myDeque.addToFront(myDeque.getBack()); --> "Jim" "Jess" "Jess" "Jill" "Jane" "Jim"

5. myPriorityQueue.add("Jim"); --> "Jim"
5. myPriorityQueue.add("Jess"); --> "Jim" "Jess"
5. myPriorityQueue.add("Jill"); --> "Jim" "Jess" "Jill"
5. myPriorityQueue.add("Jane"); --> "Jim" "Jess" "Jill" "Jane"
5. String name = myPriorityQueue.remove(); --> "Jess" "Jill" "Jane"      // Techinically Code errors here as .remove takes a parameter of the object/string/int that will be removed
5. myPriorityQueue.add(name); --> "Jess" "Jill" "Jane" "Jim"
5. myPriorityQueue.add(myPriorityQueue.peek()); --> "Jess" "Jill" "Jane" "Jim" "Jess"
5. myPriorityQueue.add("Jim"); --> "Jess" "Jill" "Jane" "Jim" "Jess" "Jim"
5. myPriorityQueue.remove(); --> "Jill" "Jane" "Jim" "Jess" "Jim"       // Techinically Code errors here as .remove takes a parameter of the object/string/int that will be removed

6. Consider strings that can be split so that their first half is the same as their second half (ignoring blanks, punctuation, and case).
6. File is called everettv_q6.java